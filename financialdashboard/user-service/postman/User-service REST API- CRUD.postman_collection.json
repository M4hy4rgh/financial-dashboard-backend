{
	"info": {
		"_postman_id": "3a095baa-21ce-48c2-b6a1-e1d2a6a0c026",
		"name": "User-service REST API: CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29886843"
	},
	"item": [
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Get data by userId",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get data by userName",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/userName?userName=johnDoe",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"userName"
					],
					"query": [
						{
							"key": "userName",
							"value": "johnDoe"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Mah\",\n    \"lastName\": \"Doe\",\n    \"userName\": \"mahdoe1\",\n    \"email\": \"Mahdou@gmail.com\",\n    \"phoneNumber\": \"123456789\",\n    \"password\": \"password\",\n    \"residentialAddress\": {\n        \"street\": \"123 Main St\",\n        \"street2\": \"123 Main St\",\n        \"city\": \"Toronto\",\n        \"province\": \"ON\",\n        \"postalCode\": \"M1M 1M1\",\n        \"country\": \"Canada\"\n    },\n    \"mailingAddress\": {\n        \"street\": \"123 Main St\",\n        \"street2\": \"123 Main St\",\n        \"city\": \"Toronto\",\n        \"province\": \"ON\",\n        \"postalCode\": \"M1M 1M1\",\n        \"country\": \"Canada\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userName\": \"Johndoe\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Mah\",\n    \"lastName\": \"Doe\",\n    \"userName\": \"mahdoe1\",\n    \"email\": \"Mahdou@gmail.com\",\n    \"phoneNumber\": \"987654321\",\n    \"password\": \"123\",\n    \"residentialAddress\": {\n        \"street\": \"1234 Main St\",\n        \"city\": \"Toronto\",\n        \"province\": \"ON\",\n        \"postalCode\": \"M1M 1M1\",\n        \"country\": \"Canada\"\n    },\n    \"mailingAddress\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"Toronto\",\n        \"province\": \"ON\",\n        \"postalCode\": \"M1M 1M1\",\n        \"country\": \"Canada\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/4",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"4"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/3",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"3"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:8080/api/user"
		}
	]
}